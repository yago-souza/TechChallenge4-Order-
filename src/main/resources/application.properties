spring.datasource.url=jdbc:h2:mem:testdb  
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true  # Habilita o console web do H2 para acesso via navegador
# Gera o schema automaticamente
spring.jpa.hibernate.ddl-auto=update

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=logistics-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# ? Configuração do Spring Cloud Stream para Kafka
spring.cloud.stream.bindings.orderCreatedProcessor-in-0.destination=orders.created
spring.cloud.stream.bindings.orderCompletedProcessor-in-0.destination=orders.completed
spring.cloud.stream.bindings.orderCreatedProcessor-in-0.group=logistics-group
spring.cloud.stream.kafka.binder.brokers=localhost:9092
spring.cloud.stream.bindings.orderCreatedProcessor-in-0.content-type=application/json
spring.cloud.stream.kafka.bindings.processOrder-in-0.consumer.configuration.spring.json.trusted.packages=*

logging.level.org.apache.kafka=WARN
logging.level.org.springframework.kafka=WARN
logging.level.org.apache.kafka.clients.producer.ProducerConfig=WARN
logging.level.com.zaxxer.hikari=WARN
logging.level.org.hibernate=WARN